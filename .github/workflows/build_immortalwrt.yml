name: 🚀 编译 ImmortalWrt

on:
  workflow_dispatch:
    inputs:
      owner:
        description: "仓库拥有者"
        type: string
        required: true
        default: "immortalwrt"
      repo:
        description: "仓库名称"
        type: string
        required: true
        default: "immortalwrt"
      branch:
        description: "分支"
        type: string
        required: true
        default: "openwrt-24.10"
      multithreading:
        description: "多线程编译"
        type: boolean
        default: true
      ssh:
        description: "SSH 调试"
        type: boolean
        default: false
      upload_files:
        description: "包含 files 目录"
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: 🚀 编译固件
    
    steps:
      - name: 📦 安装编译依赖
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential ccache cmake curl file g++ gcc git libncurses5-dev \
            libssl-dev python3 python3-setuptools rsync unzip wget \
            ack autoconf automake bison flex libtool pkg-config scons \
            gawk gettext gperf help2man intltool zlib1g-dev

      - name: 📥 克隆配置仓库
        uses: actions/checkout@v4

      - name: 📥 克隆 ImmortalWrt 源码
        uses: actions/checkout@v4
        with:
          repository: "${{ inputs.owner }}/${{ inputs.repo }}"
          ref: ${{ inputs.branch }}
          path: source

      - name: ⚙️ 复制所有配置文件
        run: |
          cp -f .config source/
          cp -rf scripts/ source/scripts/
          cp -rf beeconmini-seed-ac2/ source/beeconmini-seed-ac2/

      - name: 📁 复制 files 目录
        if: ${{ inputs.upload_files }}
        run: cp -rf files/ source/files/

      - name: 🛠️ 执行自定义配置
        working-directory: source
        run: |
          chmod +x scripts/diy.sh
          ./scripts/diy.sh

      - name: 📚 更新软件源
        working-directory: source
        run: ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: 🎨 执行后期配置
        working-directory: source
        run: |
          chmod +x scripts/post-diy.sh
          ./scripts/post-diy.sh

      - name: 🔍 SSH 调试会话
        if: ${{ inputs.ssh }}
        uses: csexton/debugger-action@master

      - name: ⬇️ 下载源码包
        working-directory: source
        run: make download -j$(nproc)

      - name: 🏗️ 编译固件
        working-directory: source
        run: |
          if [ "${{ inputs.multithreading }}" = "true" ]; then
            make -j$(nproc) V=s
          else
            make -j1 V=s
          fi

      - name: 📤 上传编译结果
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ github.sha }}
          path: source/bin/targets